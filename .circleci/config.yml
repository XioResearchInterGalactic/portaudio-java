version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.0
  macos: circleci/macos@2.5.2
  win: circleci/windows@5.0


jobs:
  generate-lib-mac-x64:
    macos:
      xcode: 16.4.0
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run:
          name: Set JAVA_HOME
          command: |
            echo 'export JAVA_HOME=$(/usr/libexec/java_home)' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install Cmake
          command: |
            brew install cmake
      - run:
          name: Checkout PortAudio
          command: |
            git clone https://github.com/PortAudio/portaudio.git portaudio
            cd portaudio
            git checkout 4fc8ddeabb29167f3e92fb27cadc13e93de26d6e
      - run:
          name: Build PortAudio
          command: |
            cd portaudio && mkdir build && cd build
            cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DPA_BUILD_SHARED_LIBS=1 -DPA_ENABLE_DEBUG_OUTPUT=1 -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_OSX_DEPLOYMENT_TARGET="12.4"
            cmake --build .
      - run:
          name: Build JPortAudio
          command: |
            mkdir build && cd build
            cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_OSX_DEPLOYMENT_TARGET="12.4"
            cmake --build .
      - run:
          name: Move files to workspace
          command: |
            mkdir -p workspace/darwin
            cd workspace/darwin
            mv $CIRCLE_WORKING_DIRECTORY/portaudio/build/libportaudio.19.8.dylib libportaudio.dylib
            mv $CIRCLE_WORKING_DIRECTORY/build/libjportaudio_0_1_0.dylib .
      - persist_to_workspace:
          root: .
          paths:
            - workspace
  generate-lib-win-x64:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: Install Cmake
          command: |
            choco install cmake -y
            echo 'export PATH="/c/Program Files/CMake/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Checkout PortAudio
          command: |
            git clone https://github.com/PortAudio/portaudio.git portaudio
            cd portaudio
            git checkout 4fc8ddeabb29167f3e92fb27cadc13e93de26d6e
      - run:
          name: Build PortAudio x64
          command: |
            cd portaudio && mkdir x64 && cd x64
            cmake -A x64 .. -DPA_BUILD_SHARED_LIBS=1 -DPA_ENABLE_DEBUG_OUTPUT=1
            cmake --build . --config RelWithDebInfo
      - run:
          name: Build JPortAudio x64
          command: |
            mkdir x64 && cd x64
            cmake -A x64 .. 
            cmake --build . --config RelWithDebInfo
      - run:
          name: Move files to workspace
          command: |
            mkdir -p workspace/win/x64
            cd workspace/win/x64
            mv $CIRCLE_WORKING_DIRECTORY/portaudio/x64/RelWithDebInfo/portaudio.dll .
            mv $CIRCLE_WORKING_DIRECTORY/x64/RelWithDebInfo/jportaudio_0_1_0.dll .
            ls -l
      - persist_to_workspace:
          root: .
          paths:
            - workspace
  generate-lib-win-win32:
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: Install Cmake
          command: |
            choco install cmake -y
            echo 'export PATH="/c/Program Files/CMake/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Checkout PortAudio
          command: |
            git clone https://github.com/PortAudio/portaudio.git portaudio
            cd portaudio
            git checkout 4fc8ddeabb29167f3e92fb27cadc13e93de26d6e
      - run:
          name: Build PortAudio x64
          command: |
            cd portaudio && mkdir Win32 && cd Win32
            cmake -A Win32 .. -DPA_BUILD_SHARED_LIBS=1 -DPA_ENABLE_DEBUG_OUTPUT=1
            cmake --build . --config RelWithDebInfo
      - run:
          name: Build JPortAudio x64
          command: |
            mkdir Win32 && cd Win32
            cmake -A Win32 ..
            cmake --build . --config RelWithDebInfo
      - run:
          name: Move files to workspace
          command: |
            mkdir -p workspace/win/win32
            cd workspace/win/win32
            mv $CIRCLE_WORKING_DIRECTORY/portaudio/Win32/RelWithDebInfo/portaudio.dll .
            mv $CIRCLE_WORKING_DIRECTORY/Win32/RelWithDebInfo/jportaudio_0_1_0.dll .
            ls -l
      - persist_to_workspace:
          root: .
          paths:
            - workspace
  build-jar:
    docker:
      - image: cimg/openjdk:17.0.4
    steps:
      - checkout
      - aws-cli/setup:
          aws_access_key_id: DEV_AWS_KEY_ID
          region: DEV_AWS_REGION
          aws_secret_access_key: DEV_AWS_SECRET
          profile_name: 619238747039_MerlynCodeArtifactAccess
      - attach_workspace:
          at: .
      - run:
          name: Set CodeArtifact Auth Token as env var for all steps in this job
          command: |
            CODEARTIFACT_AUTH_TOKEN=`./getCodeArtifactAuthToken.sh`
            echo "export CODEARTIFACT_AUTH_TOKEN=${CODEARTIFACT_AUTH_TOKEN}" >> "$BASH_ENV"
      - run:
          name: Move workspace files
          command: |
            mkdir -p src/main/resources
            cp -R workspace/. src/main/resources
            cd src/main/resources
            find . -exec ls -l {} \;
      - run:
          name: Grant Gradle wrapper execution permission
          command: |
            chmod +x ./gradlew
      - run:
          name: Build Jar
          command: |
            ./gradlew build -x test
            ./gradlew test --tests=com.portaudio.TestBasic.testHostApis
      - when:
          condition:
            and:
              - equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Publish release
                command: |
                  ./gradlew publish

workflows:
  ci:
    jobs:
      - generate-lib-mac-x64
      - generate-lib-win-x64
      - generate-lib-win-win32
      - build-jar:
          requires:
            - generate-lib-mac-x64
            - generate-lib-win-x64
            - generate-lib-win-win32
          context:
            - CodeArtifact
